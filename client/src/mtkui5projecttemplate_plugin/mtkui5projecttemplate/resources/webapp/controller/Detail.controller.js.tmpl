sap.ui.define([
"{{formatNamespace fullyQualifiedProjectName}}/controller/BaseController",
"sap/ui/model/json/JSONModel"
], function (BaseController, JSONModel) {
	"use strict";

	return BaseController.extend("{{basicSAPUI5ApplicationProject.parameters.namespace.value}}.{{projectName}}.controller.{{basicSAPUI5ApplicationProject.parameters.name2.value}}", {

		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf com.mtk.Template.view.Detail
		 */
		onInit: function () {
			var oRouter = this.getRouter();
			oRouter.getRoute("detail").attachMatched(this._onRouteMatched, this);
		},

		_onRouteMatched : function (oEvent) {
			var oArgs, oView;
			oArgs = oEvent.getParameter("arguments");
			oView = this.getView();
			var oModel = new JSONModel({
				ObjectId: decodeURIComponent(oArgs.objectId),
				CountryName: oArgs.countryName,
				City: oArgs.city,
				DepartureDate: new Date(decodeURIComponent(oArgs.departureDate)),
				ReturnDate: new Date(decodeURIComponent(oArgs.returnDate))
			});
			oView.setModel(oModel);
		
			/*
			// bindElement require backend server implement GET_ENTITY method (the path is for displaying entity)
			oView.bindElement({
				path : decodeURIComponent(oArgs.objectId),
				events : {
					change: this._onBindingChange.bind(this),
					dataRequested: function (oEvent) {
						oView.setBusy(true);
					},
					dataReceived: function (oEvent) {
						oView.setBusy(false);
					}
				}
			}); 
		
			*/
		
		},

		_onBindingChange : function (oEvent) {
			// No data for the binding
			if (!this.getView().getBindingContext()) {
				this.getRouter().getTargets().display("notFound");
			}
		}
		/**
		 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
		 * (NOT before the first rendering! onInit() is used for that one!).
		 * @memberOf com.mtk.Template.view.Detail
		 */
		//	onBeforeRendering: function() {
		//
		//	},

		/**
		 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
		 * This hook is the same one that SAPUI5 controls get after being rendered.
		 * @memberOf com.mtk.Template.view.Detail
		 */
		//	onAfterRendering: function() {
		//
		//	},

		/**
		 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
		 * @memberOf com.mtk.Template.view.Detail
		 */
		//	onExit: function() {
		//
		//	}

	});

});